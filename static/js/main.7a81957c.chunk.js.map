{"version":3,"sources":["components/Header.jsx","components/About.jsx","components/Experience.jsx","components/WorkPiece.jsx","components/Work.jsx","components/Footer.jsx","components/Contact.jsx","components/Resume.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","bgColor","textColor","currentPage","updatePage","className","alignLinks","id","brand","src","alt","sidenav","href","onClick","About","Experience","WorkPiece","props","actions","key","repo","target","rel","deploy","textClassName","text_color","title","header","image","img","horizontal","Work","workPiecesMarkup","bg_color","forEach","workPiece","index","push","Footer","Contact","waves","Resume","App","useState","setCurrentPage","page","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a81957c.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'materialize-css';\r\nimport {NavItem, Navbar} from 'react-materialize'\r\nimport '../App.css'\r\n\r\n\r\nconst Header = ({bgColor, textColor, currentPage, updatePage}) => {\r\n\r\n    return (\r\n        <header>\r\n            <Navbar className=\"transparentBG\"\r\n                alignLinks=\"right\"\r\n                id=\"header\"\r\n                brand={<img className={`navbarIcon`} src=\"./assets/icons/flower_fox_orange.svg\" alt=\"fonyx logo\" />}\r\n                sidenav={\r\n                    <ul>\r\n                        <li className=\"sidenav_link\"><a href=\"#about\"       \r\n                            onClick={() => updatePage('About')} \r\n                            className={currentPage==='About'? `active ${textColor}`:`inactive ${textColor}`}>About</a>\r\n                        </li>\r\n                        <li className=\"sidenav_link\"><a href=\"#experience\"  \r\n                            onClick={() => updatePage('Experience')} \r\n                            className={currentPage==='Experience'? `active ${textColor}`:`inactive ${textColor}`}>Experience</a>\r\n                        </li>\r\n                        <li className=\"sidenav_link\"><a href=\"#work\"        \r\n                            onClick={() =>  updatePage('Work')} \r\n                            className={currentPage==='Work'? `active ${textColor}`:`inactive ${textColor}`}>Work</a>\r\n                        </li>\r\n                        <li className=\"sidenav_link\"><a href=\"#contact\"     \r\n                            onClick={() =>  updatePage('Contact')} \r\n                            className={currentPage==='Contact'? `active ${textColor}`:`inactive ${textColor}`}>Contact</a>\r\n                        </li>\r\n                        <li className=\"sidenav_link\"><a href=\"#resume\"     \r\n                            onClick={() =>  updatePage('Resume')} \r\n                            className={currentPage==='Resume'? `active ${textColor}`:`inactive ${textColor}`}>Resume</a>\r\n                        </li>\r\n                    </ul>\r\n                }\r\n                >\r\n                <NavItem className={currentPage==='About'? `active ${textColor}`:`inactive ${textColor}`} onClick={() =>  updatePage('About')}>About</NavItem>\r\n                <NavItem className={currentPage==='Experience'? `active ${textColor}`:`inactive ${textColor}`} onClick={() =>  updatePage('Experience')}>Experience</NavItem>\r\n                <NavItem className={currentPage==='Work'? `active ${textColor}`:`inactive ${textColor}`} onClick={() =>  updatePage('Work')}>Work</NavItem>\r\n                <NavItem className={currentPage==='Contact'? `active ${textColor}`:`inactive ${textColor}`} onClick={() =>  updatePage('Contact')}>Contact</NavItem>\r\n                <NavItem className={currentPage==='Resume'? `active ${textColor}`:`inactive ${textColor}`} onClick={() =>  updatePage('Resume')}>Resume</NavItem>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n    \r\n}\r\n\r\nexport default Header\r\n\r\n\r\n","import React from 'react'\r\nimport {Row} from 'react-materialize'\r\nimport '../App.css'\r\n\r\n\r\nconst About = ({textColor}) => {\r\n\r\n    return (\r\n        <div className=\"about_section\">\r\n            <h2 className={`${textColor}`}>ABOUT</h2>\r\n            <Row>\r\n                <p className={`${textColor}`}>Hi, my name is</p>\r\n                <h2 className={`${textColor}`}>Nicholas Ritchie</h2>\r\n                <h3 className={`${textColor}`}>And I build things....internet things</h3>\r\n                <p className={`${textColor}`}>I'm a full stack developer completing my bootcamp with USYD and trilogy. In the near future I am looking to get into fin tech development and I have a background in data-science and manufacturing.</p>\r\n                <p className={`${textColor}`}>Full stack developer with a background in engineering. Certificate in full stack development from the University of Sydney, with skills in nodeJs, react, css frame works and data persistence tools. An enterprising professional with diverse professional history and a warm interpersonal tone. Made the change from engineering to pursue an idea of visualizing career pathways as an interactive map. Built using Django, d3 and BeautifulSoup. From this project I discovered a dormant attraction to compelling visual products and software development. With a hard science background and broad experience in hardware, I will join you with a light-hearted charm and comprehensive understanding of technical group work.</p>\r\n            </Row>\r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\n\r\nexport default About","import React from 'react'\r\nimport {Row, Col} from 'react-materialize'\r\nimport '../App.css'\r\n\r\n\r\nconst Experience = ({textColor}) => {\r\n\r\n    return (\r\n        <div className=\"experience_section\">\r\n            <h2 className={`${textColor}`}>EXPERIENCE</h2>\r\n            <Row className={`${textColor}`}>\r\n                <Col>\r\n                    <h2>Companies</h2>\r\n                </Col>\r\n                <Col>\r\n                    <h2>Roles</h2>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Experience","import React from 'react'\r\nimport {Card, CardTitle} from 'react-materialize'\r\nimport '../App.css'\r\n\r\nconst WorkPiece = ({props}) => {\r\n\r\n    return (\r\n        <div className='col s12 l6'>\r\n            <Card\r\n                actions={[\r\n                    <a key=\"1\" href={props.repo} target=\"_blank\" rel=\"noopener noreferrer\">Repo</a>,\r\n                    <a key=\"2\" href={props.deploy} target=\"_blank\" rel=\"noopener noreferrer\">Deployed</a>\r\n                ]}\r\n                className=\"card transparentBG\"\r\n                textClassName={`${props.text_color}`}\r\n                title={props.title}\r\n                header={<CardTitle image={props.img} />}\r\n                horizontal\r\n                >\r\n                <div className='card-details'>\r\n                    <p className=\"card-blurb\">A budgeting app built</p>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n    // let styleObj = {\r\n    //     backgroundImage: `url(${props.img})`,\r\n    // }\r\n\r\n    // let tiltOptions = {\r\n    //     speed: 200,\r\n    //     scale: 1.2\r\n    // }\r\n\r\n    // return (\r\n    //     <div className='col s12 m6'>\r\n    //         <Title options={tiltOptions}>\r\n    //             <div className=\"my_card center-align\">\r\n    //                 <div className=\"my_card-image\" style={styleObj}></div>\r\n    //                 <div className=\"my_card-text\">\r\n    //                     <h2>Budgie</h2>\r\n    //                     <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim accusantium quibusdam</p>\r\n    //                     <span className=\"date\">4 days ago</span>\r\n    //                 </div>\r\n    //                 <div className=\"my_card-stats\">\r\n    //                     <div className=\"stat borderY\">\r\n    //                         <div className='value'>4<sup>m</sup></div>\r\n    //                         <div className='type'>read</div>\r\n    //                     </div>\r\n    //                     <div className=\"stat borderX borderY\">\r\n    //                         <div className='value'><Icon>github</Icon></div>\r\n    //                     </div>\r\n    //                     <div className=\"stat borderY\">\r\n    //                         <div className='value'>32</div>\r\n    //                         <div className='type'>comments</div>\r\n    //                     </div>\r\n    //                 </div>\r\n    //             </div>\r\n    //         </Title>\r\n    //     </div>\r\n    // )\r\n    \r\n}\r\n\r\nexport default WorkPiece","import React from 'react'\r\nimport WorkPiece from './WorkPiece'\r\n\r\nfunction Work() {\r\n\r\n    let bgColor=\"secondary_bg\";\r\n    let textColor=\"quinary_text\";\r\n\r\n    const workPieceData = [\r\n        {\r\n          title: \"Budgie\",\r\n          img:\"https://github.com/Fonyx/budgie/blob/main/assets/images/show.gif?raw=true\",\r\n          bg_color:bgColor,\r\n          text_color:textColor,\r\n          repo:\"https://github.com/Fonyx/budgie\",\r\n          deploy:\"https://fonyx-budgie.herokuapp.com/\"\r\n        },\r\n        {\r\n          title: \"Budgie\",\r\n          img:\"https://github.com/Fonyx/budgie/blob/main/assets/images/show.gif?raw=true\",\r\n          bg_color:bgColor,\r\n          text_color:textColor,\r\n        },\r\n        {\r\n          title: \"Budgie\",\r\n          img:\"https://github.com/Fonyx/budgie/blob/main/assets/images/show.gif?raw=true\",\r\n          bg_color:bgColor,\r\n          text_color:textColor,\r\n        },\r\n      ]\r\n  \r\n      var workPiecesMarkup = []\r\n      \r\n      workPieceData.forEach((workPiece, index) => {\r\n  \r\n        workPiecesMarkup.push(\r\n          <WorkPiece key={index} props={workPiece}/>\r\n        )\r\n      })\r\n\r\n    return (\r\n      <div className=\"work_section\">\r\n        <h2 className={`${textColor}`}>WORK</h2>\r\n        <div className=\"row\">\r\n          {workPiecesMarkup}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Work\r\n","import React from 'react'\r\n\r\nconst Footer = ({bgColor, textColor}) => {\r\n    return (\r\n        <footer className=\"transparentBG\">\r\n            <div>\r\n                <div className=\"row\">\r\n                <div className=\"col l6 s12\">\r\n                    <h5 className={`${bgColor} ${textColor}`}>Footer Content</h5>\r\n                    <p className={`${bgColor} ${textColor} text-lighten-4`}>You can use rows and columns here to organize your footer content.</p>\r\n                </div>\r\n                <div className=\"col l4 offset-l2 s12\">\r\n                    <h5 className={`${textColor}`}>Links</h5>\r\n                    <ul>\r\n                    <li><a className={`${textColor} text-lighten-1`} href=\"#!\">Link 1</a></li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n\r\n\r\n","import React from 'react'\r\nimport {Button} from 'react-materialize'\r\nimport '../App.css'\r\n\r\nfunction Contact({textColor}) {\r\n    return (\r\n        <div className={`contact_section ${textColor}`}>\r\n            <h2 className={`${textColor}`}>CONTACT</h2>\r\n            <h2>Come buy me a coffee and we can chat</h2>\r\n\r\n            <a href=\"mailto:nick.alex.ritchie@gmail.com\">\r\n                <Button className={`quaternary_bg ${textColor}`} waves='orange'>nick.alex.ritchie@gmail.com</Button>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react'\r\nimport {Button} from 'react-materialize'\r\nimport '../App.css'\r\n\r\nexport default function Resume({textColor}) {\r\n    return (\r\n        <div className={`resume_section ${textColor}`}>\r\n            <h2 className={`${textColor}`}>RESUME</h2>\r\n            <a href=\"https://fonyx.github.io/resume/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <Button className={`quaternary_bg ${textColor}`} waves='orange'>Resume\r\n                </Button>\r\n            </a>\r\n            <h3>Skills</h3>\r\n            <ul>\r\n                <li>React</li>\r\n                <li>Materialize CSS</li>\r\n                <li>Git</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\n// tslint:disable-next-line\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport {Container} from 'react-materialize';\r\nimport Header from './components/Header'\r\nimport About from './components/About'\r\nimport Experience from './components/Experience'\r\nimport Work from './components/Work'\r\nimport Footer from './components/Footer'\r\nimport Contact from './components/Contact';\r\nimport Resume from './components/Resume';\r\nimport Particles from 'react-particles-js';\r\n\r\nfunction App() {\r\n\r\n    const textColor = 'quinary_text'\r\n\r\n    const [currentPage, setCurrentPage] = useState('Work');\r\n\r\n    // conditionally update state\r\n    const renderPage = () => {\r\n      if (currentPage === 'About') {\r\n        return <About textColor={textColor}/>;\r\n      }\r\n      if (currentPage === 'Experience') {\r\n        return <Experience textColor={textColor}/>;\r\n      }\r\n      if (currentPage === 'Work') {\r\n        return <Work textColor={textColor}/>;\r\n      }\r\n      if (currentPage === 'Contact') {\r\n        return <Contact textColor={textColor}/>;\r\n      }\r\n      return <Resume textColor={textColor}/>;\r\n    };\r\n\r\n    const updatePage = (page) => {\r\n      setCurrentPage(page)\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n          <Header\r\n            bgColor=\"tertiary_bg\" \r\n            textColor={textColor} \r\n            currentPage={currentPage}\r\n            updatePage={updatePage}\r\n          />\r\n          <main>\r\n              <Particles\r\n                params={{\r\n                  \"particles\": {\r\n                    \"number\": {\r\n                      \"value\": 150,\r\n                      \"density\": {\r\n                        \"enable\": true,\r\n                        \"value_area\": 800\r\n                      }\r\n                    },\r\n                    \"color\": {\r\n                      \"value\": \"#ae4d75\"\r\n                    },\r\n                    \"shape\": {\r\n                      \"type\": \"polygon\",\r\n                      \"stroke\": {\r\n                        \"width\": 0,\r\n                        \"color\": \"#ae4d75\"\r\n                      },\r\n                      \"polygon\": {\r\n                        \"nb_sides\": 6\r\n                      },\r\n                      \"image\": {\r\n                        \"src\": \"img/github.svg\",\r\n                        \"width\": 100,\r\n                        \"height\": 100\r\n                      }\r\n                    },\r\n                    \"opacity\": {\r\n                      \"value\": 0.3,\r\n                      \"random\": true,\r\n                      \"anim\": {\r\n                        \"enable\": false,\r\n                        \"speed\": 0.07991497047141839,\r\n                        \"opacity_min\": 0.19978742617854597,\r\n                        \"sync\": false\r\n                      }\r\n                    },\r\n                    \"size\": {\r\n                      \"value\": 13,\r\n                      \"random\": true,\r\n                      \"anim\": {\r\n                        \"enable\": false,\r\n                        \"speed\": 23.974491141425517,\r\n                        \"size_min\": 3.99574852357092,\r\n                        \"sync\": false\r\n                      }\r\n                    },\r\n                    \"line_linked\": {\r\n                      \"enable\": true,\r\n                      \"distance\": 142.0488174435947,\r\n                      \"color\": \"#ae4d75\",\r\n                      \"opacity\": 0.4,\r\n                      \"width\": 1\r\n                    },\r\n                    \"move\": {\r\n                      \"enable\": true,\r\n                      \"speed\": 2,\r\n                      \"direction\": \"none\",\r\n                      \"random\": false,\r\n                      \"straight\": false,\r\n                      \"out_mode\": \"out\",\r\n                      \"bounce\": false,\r\n                      \"attract\": {\r\n                        \"enable\": false,\r\n                        \"rotateX\": 600,\r\n                        \"rotateY\": 1200\r\n                      }\r\n                    }\r\n                  },\r\n                  \"interactivity\": {\r\n                    \"detect_on\": \"window\",\r\n                    \"events\": {\r\n                      \"onhover\": {\r\n                        \"enable\": true,\r\n                        \"mode\": \"bubble\"\r\n                      },\r\n                      \"onclick\": {\r\n                        \"enable\": true,\r\n                        \"mode\": \"push\"\r\n                      },\r\n                      \"resize\": true\r\n                    },\r\n                    \"modes\": {\r\n                      \"grab\": {\r\n                        \"distance\": 400,\r\n                        \"line_linked\": {\r\n                          \"opacity\": 1\r\n                        }\r\n                      },\r\n                      \"bubble\": {\r\n                        \"distance\": 266.04729729729706,\r\n                        \"size\": 12.668918918918909,\r\n                        \"duration\": 0.9290540540540533,\r\n                        \"opacity\": 0.6249999999999996,\r\n                        \"speed\": 3\r\n                      },\r\n                      \"repulse\": {\r\n                        \"distance\": 200,\r\n                        \"duration\": 0.4\r\n                      },\r\n                      \"push\": {\r\n                        \"particles_nb\": 4\r\n                      },\r\n                      \"remove\": {\r\n                        \"particles_nb\": 2\r\n                      }\r\n                    }\r\n                  },\r\n                  \"retina_detect\": true\r\n                }}/>\r\n            <Container>\r\n                {renderPage()}\r\n            </Container>\r\n          </main>\r\n          <Footer bgColor=\"transparentBG\" textColor={textColor}></Footer>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}